name: Deploy to GitHub Pages
on:
  push:
    branches: ["main"]

permissions:
      contents: "read"
      pages: "write"
      id-token: "write"
    with:
      settings: "publishconf.py"
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python }}
      - name: Checkout theme
        if: ${{ inputs.theme }}
        run: git clone '${{ inputs.theme }}' .theme
      - name: Configure GitHub Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install requirements
        run: pip install ${{ inputs.requirements }}
      - name: Build Pelican site
        shell: python
        run: |
          import subprocess

          cmd = "pelican"
          cmd += " --settings ${{ inputs.settings }}"
          cmd += " --extra-settings"
          cmd += """ SITEURL='"${{ inputs.siteurl || steps.pages.outputs.base_url }}"'"""
          cmd += """ FEED_DOMAIN='"${{ inputs.feed_domain || steps.pages.outputs.base_url }}"'"""
          cmd += " --output ${{ inputs.output-path }}"

          if "${{ inputs.theme }}":
              cmd += " --theme-path .theme"

          subprocess.run(cmd, shell=True, check=True)
      - name: Fix permissions
        run: |
          chmod -c -R +rX "${{ inputs.output-path }}" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ inputs.output-path }}
  deploy:
    concurrency:
      group: "pages"
      cancel-in-progress: false
    if: ${{ inputs.deploy }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
   

